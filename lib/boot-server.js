// Generated by LiveScript 1.2.0
var path, createServer, readdirSync, tryRequire, bootServer;
path = require('path');
createServer = require('http').createServer;
readdirSync = require('fs').readdirSync;
tryRequire = function(ref){
  var e;
  try {
    return require(ref);
  } catch (e$) {
    e = e$;
    if (e.code === 'MODULE_NOT_FOUND') {
      return null;
    } else {
      throw e;
    }
  }
};
module.exports = bootServer = function(appRoot){
  var e, ref$, createApp, render, routes, serverInit, app, config, loadModules, server, port;
  ref$ = (function(){
    try {
      return require(appRoot + "/node_modules/quinn");
    } catch (e$) {
      e = e$;
      return require('./quinn');
    }
  }()), createApp = ref$.createApp, render = ref$.render;
  routes = tryRequire(appRoot + "/config/routes");
  serverInit = tryRequire(appRoot + "/config/server");
  ref$ = app = createApp(), config = ref$.config, loadModules = ref$.loadModules;
  config.loadAppConfig(appRoot);
  config.defaults({
    server: {
      mountPoint: '',
      port: process.env.PORT || 3000
    }
  });
  loadModules(config.appPath('modules'));
  if (typeof routes === 'function') {
    routes(app);
  }
  server = createServer();
  if (typeof serverInit === 'function') {
    serverInit(server);
  }
  server.on('request', app.handleRequest);
  port = config.get('server.port');
  server.listen(port, function(){
    return typeof process.send === 'function' ? process.send('online') : void 8;
  });
  process.on('message', function(message){
    if (message === 'shutdown') {
      return process.exit(0);
    }
  });
  return server;
};